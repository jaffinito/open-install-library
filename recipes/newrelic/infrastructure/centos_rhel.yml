# Visit our schema definition for additional information on this file format
# https://github.com/newrelic/open-install-library/blob/main/docs/recipe-spec/recipe-spec.md#schema-definition

name: infrastructure-agent-installer
displayName: Infrastructure Agent
description: New Relic install recipe for the Infrastructure agent
repository: https://github.com/newrelic/infrastructure-agent

installTargets:
  - type: host
    os: linux
    platform: "redhat"
    platformVersion: "7"
  - type: host
    os: linux
    platform: "redhat"
    platformVersion: "8"
  - type: host
    os: linux
    platform: "centos"
    platformVersion: "7"
  - type: host
    os: linux
    platform: "centos"
    platformVersion: "8"

keywords:
  - Infrastructure
  - Agent
  - CentOS 7
  - CentOS 8
  - RHEL 7
  - RHEL 8

processMatch: []

validationNrql: "SELECT count(*) from SystemSample where hostname like '{{.HOSTNAME}}%' FACET entityGuid SINCE 10 minutes ago"

install:
  version: "3"
  silent: true

  tasks:
    default:
      cmds:
        - task: assert_pre_req
        - task: setup_license
        - task: install_infra
        - task: restart
        - task: assert_agent_started

    assert_pre_req:
      cmds:
        - |
          IS_GREP_INSTALLED=$(which grep | wc -l)
          if [ $IS_GREP_INSTALLED -eq 0 ] ; then
            echo "grep is required to run the newrelic install. Please install grep and re-run the installation." >> /dev/stderr
            exit 10
          fi
        - |
          IS_SED_INSTALLED=$(which sed | wc -l)
          if [ $IS_SED_INSTALLED -eq 0 ] ; then
            echo "sed is required to run the newrelic install. Please install sed and re-run the installation." >> /dev/stderr
            exit 11
          fi
        - |
          IS_AWK_INSTALLED=$(which awk | wc -l)
          if [ $IS_AWK_INSTALLED -eq 0 ] ; then
            echo "awk is required to run the newrelic install. Please install awk and re-run the installation." >> /dev/stderr
            exit 12
          fi
        - |
          IS_CAT_INSTALLED=$(which cat | wc -l)
          if [ $IS_CAT_INSTALLED -eq 0 ] ; then
            echo "cat is required to run the newrelic install. Please install cat and re-run the installation." >> /dev/stderr
            exit 13
          fi
        - |
          IS_TEE_INSTALLED=$(which tee | wc -l)
          if [ $IS_TEE_INSTALLED -eq 0 ] ; then
            echo "tee is required to run the newrelic install. Please install tee and re-run the installation." >> /dev/stderr
            exit 14
          fi
        - |
          IS_TOUCH_INSTALLED=$(which touch | wc -l)
          if [ $IS_TOUCH_INSTALLED -eq 0 ] ; then
            echo "touch is required to run the newrelic install. Please install touch and re-run the installation." >> /dev/stderr
            exit 15
          fi
        - |
          IS_SYSTEMCTL_INSTALLED=$(which systemctl | wc -l)
          if [ $IS_SYSTEMCTL_INSTALLED -eq 0 ] ; then
            echo "systemctl is required to install the newrelic infrastructure agent. Installation cannot proceed on this linux version." >> /dev/stderr
            exit 20
          fi
        - |
          IS_INFRA_AVAILABLE=$(curl -Is https://download.newrelic.com/infrastructure_agent/linux/yum/el/{{.DISTRO_VERSION}}/x86_64/newrelic-infra.repo | grep " 2[0-9][0-9] " | wc -l)
          if [ $IS_INFRA_AVAILABLE -eq 0 ] ; then
            echo "there is no newrelic infrastructure agent available for the distribution '{{.DISTRO_VERSION}}'." >> /dev/stderr
            exit 21
          fi
        - |
          IS_SYSTEMCTL_AVAILABLE=$(sudo systemctl status | grep -i running | wc -l)
          if [ $IS_SYSTEMCTL_AVAILABLE -eq 0 ] ; then
            echo "systemctl is required to install the newrelic infrastructure agent. System has not been booted with systemd as init system. Installation cannot proceed on this linux version." >> /dev/stderr
            exit 20
          fi
      vars:
        DISTRO_VERSION:
          sh: |
            rpm -E %{rhel}

    setup_license:
      cmds:
        - |
          if [ -f /etc/newrelic-infra.yml ]; then
            sudo rm /etc/newrelic-infra.yml;
          fi
          sudo touch /etc/newrelic-infra.yml;
        - |
          sudo tee /etc/newrelic-infra.yml > /dev/null <<"EOT"
          license_key: {{.NEW_RELIC_LICENSE_KEY}}
          enable_process_metrics: true
          EOT
        - |
          if [ $(echo {{.NEW_RELIC_REGION}} | grep -i staging | wc -l) -gt 0 ]; then
            echo 'staging: true' | sudo tee -a /etc/newrelic-infra.yml > /dev/null
          fi

    install_infra:
      cmds:
        - sudo curl -s -o /etc/yum.repos.d/newrelic-infra.repo https://download.newrelic.com/infrastructure_agent/linux/yum/el/{{.DISTRO_VERSION}}/x86_64/newrelic-infra.repo
        - sudo yum -y -q makecache --disablerepo='*' --enablerepo='newrelic-infra'
        - sudo yum -y -q install newrelic-infra
      vars:
        DISTRO_VERSION:
          sh: |
            rpm -E %{rhel}
      silent: true

    restart:
      cmds:
        - sudo systemctl restart newrelic-infra.service

    assert_agent_started:
      cmds:
        - |
          # Ensure agent has enough time to start
          sleep 10
          IS_INFRA_INSTALLED=$(sudo ps aux | grep newrelic-infra-service | grep -v grep | wc -l)
          if [ $IS_INFRA_INSTALLED -eq 0 ] ; then
            echo "The infrastructure agent has not started after installing. Please try again later, or see our documentation for installing manually https://docs.newrelic.com/docs/using-new-relic/cross-product-functions/install-configure/install-new-relic" >> /dev/stderr
            exit 31
          fi

postInstall:
  info: |2
      ⚙️  The Infrastructure Agent configuration file can be found in /etc/newrelic-infra.yml
      Edit this file to make changes or configure advanced features for the agent. See the docs for options:
      https://docs.newrelic.com/docs/infrastructure/install-infrastructure-agent/configuration/infrastructure-agent-configuration-settings
      
      Note: Process monitoring has been enabled by default - all other config options are left to the user.
